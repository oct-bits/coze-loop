CREATE TABLE IF NOT EXISTS `observability_spans` (
    `trace_id` String,
    `span_id` String,
    `space_id` String,
    `span_type` String,
    `span_name` String,
    `parent_id` String,
    `method` Nullable(String),
    `psm` Nullable(String),
    `logid` Nullable(String),
    `start_time` Int64,
    `call_type` Nullable(String),
    `duration` Int64,
    `status_code` Int32,
    `object_storage` Nullable(String),
    `input` String,
    `output` String,
    `logic_delete_date` Int64,
    `reserve_create_time` Nullable(String),
    `tags_bool` Map(String,UInt8),
    `tags_float` Map(String,Float64),
    `tags_string` Map(String,String),
    `tags_long` Map(String,Int64),
    `tags_byte` Map(String,String),
    `system_tags_float` Map(String,Float64),
    `system_tags_long` Map(String,Int64),
    `system_tags_string` Map(String,String),
    INDEX idx_trace_id trace_id TYPE bloom_filter() GRANULARITY 1,
    INDEX idx_space_id space_id TYPE bloom_filter() GRANULARITY 1,
    INDEX idx_span_type span_type TYPE bloom_filter() GRANULARITY 1,
    INDEX idx_span_name span_name TYPE bloom_filter() GRANULARITY 1,
    INDEX idx_input input TYPE tokenbf_v1(32768, 3, 0) GRANULARITY 4,
    INDEX idx_output output TYPE tokenbf_v1(32768, 3, 0) GRANULARITY 4
) ENGINE = MergeTree() Partition by toDate(start_time / 1000000)
PRIMARY KEY (start_time)
ORDER BY (start_time);