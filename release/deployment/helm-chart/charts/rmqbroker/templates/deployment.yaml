apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application.name" . }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "application.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "application.name" . }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      volumes:
        - name: data
          emptyDir: { }
        - name: etc
          configMap:
            name: {{ include "configmap-etc.name" . }}
        - name: scripts
          configMap:
            name: {{ include "configmap-scripts.name" . }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      containers:
        - name: {{ include "application.name" . }}
          image: {{ include "image.fullname" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.targetBusPort }}
            - containerPort: {{ .Values.service.targetMgmtPort }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.deployment.dataMountPath }}
            - name: etc
              mountPath: {{ include "etc.path" . }}
              readOnly: true
            - name: scripts
              mountPath: {{ include "scripts.path" . }}
              readOnly: true
          env:
            - name: COZELOOP_RMQBROKER_BUS_PORT_POD
              value: "{{ .Values.service.targetBusPort }}"
            - name: BROKER_ROLE
              value: "ASYNC_MASTER"
            - name: FLUSH_DISK_TYPE
              value: "ASYNC_FLUSH"
          command: [ "/bin/bash" ]
          args: [ "{{ include "entrypoint.path" . }}" ]
          livenessProbe:
            exec:
              command: [ "/bin/bash", "{{ include "healthcheck.path" . }}" ]
            initialDelaySeconds: {{ .Values.liveness.startSeconds }}
            periodSeconds: {{ .Values.liveness.intervalSeconds }}
            timeoutSeconds: {{ .Values.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.liveness.shutdownFailureTimes }}