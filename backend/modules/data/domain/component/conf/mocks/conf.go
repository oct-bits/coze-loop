// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/data/domain/component/conf (interfaces: IConfig)
//
// Generated by this command:
//
//	mockgen -destination=mocks/conf.go -package=mocks . IConfig
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	conf "github.com/coze-dev/coze-loop/backend/modules/data/domain/component/conf"
	gomock "go.uber.org/mock/gomock"
)

// MockIConfig is a mock of IConfig interface.
type MockIConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIConfigMockRecorder
}

// MockIConfigMockRecorder is the mock recorder for MockIConfig.
type MockIConfigMockRecorder struct {
	mock *MockIConfig
}

// NewMockIConfig creates a new mock instance.
func NewMockIConfig(ctrl *gomock.Controller) *MockIConfig {
	mock := &MockIConfig{ctrl: ctrl}
	mock.recorder = &MockIConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConfig) EXPECT() *MockIConfigMockRecorder {
	return m.recorder
}

// GetConsumerConfigs mocks base method.
func (m *MockIConfig) GetConsumerConfigs() *conf.ConsumerConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConsumerConfigs")
	ret0, _ := ret[0].(*conf.ConsumerConfig)
	return ret0
}

// GetConsumerConfigs indicates an expected call of GetConsumerConfigs.
func (mr *MockIConfigMockRecorder) GetConsumerConfigs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConsumerConfigs", reflect.TypeOf((*MockIConfig)(nil).GetConsumerConfigs))
}

// GetDatasetFeature mocks base method.
func (m *MockIConfig) GetDatasetFeature() *conf.DatasetFeature {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatasetFeature")
	ret0, _ := ret[0].(*conf.DatasetFeature)
	return ret0
}

// GetDatasetFeature indicates an expected call of GetDatasetFeature.
func (mr *MockIConfigMockRecorder) GetDatasetFeature() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatasetFeature", reflect.TypeOf((*MockIConfig)(nil).GetDatasetFeature))
}

// GetDatasetItemStorage mocks base method.
func (m *MockIConfig) GetDatasetItemStorage() *conf.DatasetItemStorage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatasetItemStorage")
	ret0, _ := ret[0].(*conf.DatasetItemStorage)
	return ret0
}

// GetDatasetItemStorage indicates an expected call of GetDatasetItemStorage.
func (mr *MockIConfigMockRecorder) GetDatasetItemStorage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatasetItemStorage", reflect.TypeOf((*MockIConfig)(nil).GetDatasetItemStorage))
}

// GetDatasetSpec mocks base method.
func (m *MockIConfig) GetDatasetSpec() *conf.DatasetSpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatasetSpec")
	ret0, _ := ret[0].(*conf.DatasetSpec)
	return ret0
}

// GetDatasetSpec indicates an expected call of GetDatasetSpec.
func (mr *MockIConfigMockRecorder) GetDatasetSpec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatasetSpec", reflect.TypeOf((*MockIConfig)(nil).GetDatasetSpec))
}

// GetProducerConfig mocks base method.
func (m *MockIConfig) GetProducerConfig() *conf.ProducerConfig {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProducerConfig")
	ret0, _ := ret[0].(*conf.ProducerConfig)
	return ret0
}

// GetProducerConfig indicates an expected call of GetProducerConfig.
func (mr *MockIConfigMockRecorder) GetProducerConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProducerConfig", reflect.TypeOf((*MockIConfig)(nil).GetProducerConfig))
}

// GetSnapshotRetry mocks base method.
func (m *MockIConfig) GetSnapshotRetry() *conf.SnapshotRetry {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSnapshotRetry")
	ret0, _ := ret[0].(*conf.SnapshotRetry)
	return ret0
}

// GetSnapshotRetry indicates an expected call of GetSnapshotRetry.
func (mr *MockIConfigMockRecorder) GetSnapshotRetry() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSnapshotRetry", reflect.TypeOf((*MockIConfig)(nil).GetSnapshotRetry))
}

// GetTagSpec mocks base method.
func (m *MockIConfig) GetTagSpec() *conf.TagSpec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTagSpec")
	ret0, _ := ret[0].(*conf.TagSpec)
	return ret0
}

// GetTagSpec indicates an expected call of GetTagSpec.
func (mr *MockIConfigMockRecorder) GetTagSpec() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTagSpec", reflect.TypeOf((*MockIConfig)(nil).GetTagSpec))
}
