// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coze-dev/coze-loop/backend/modules/observability/domain/component/rpc (interfaces: IEvaluatorRPCAdapter)
//
// Generated by this command:
//
//	mockgen -destination=mocks/evaluator.go -package=mocks . IEvaluatorRPCAdapter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	rpc "github.com/coze-dev/coze-loop/backend/modules/observability/domain/component/rpc"
	gomock "go.uber.org/mock/gomock"
)

// MockIEvaluatorRPCAdapter is a mock of IEvaluatorRPCAdapter interface.
type MockIEvaluatorRPCAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockIEvaluatorRPCAdapterMockRecorder
	isgomock struct{}
}

// MockIEvaluatorRPCAdapterMockRecorder is the mock recorder for MockIEvaluatorRPCAdapter.
type MockIEvaluatorRPCAdapterMockRecorder struct {
	mock *MockIEvaluatorRPCAdapter
}

// NewMockIEvaluatorRPCAdapter creates a new mock instance.
func NewMockIEvaluatorRPCAdapter(ctrl *gomock.Controller) *MockIEvaluatorRPCAdapter {
	mock := &MockIEvaluatorRPCAdapter{ctrl: ctrl}
	mock.recorder = &MockIEvaluatorRPCAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEvaluatorRPCAdapter) EXPECT() *MockIEvaluatorRPCAdapterMockRecorder {
	return m.recorder
}

// BatchGetEvaluatorVersions mocks base method.
func (m *MockIEvaluatorRPCAdapter) BatchGetEvaluatorVersions(ctx context.Context, param *rpc.BatchGetEvaluatorVersionsParam) ([]*rpc.Evaluator, map[int64]*rpc.Evaluator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetEvaluatorVersions", ctx, param)
	ret0, _ := ret[0].([]*rpc.Evaluator)
	ret1, _ := ret[1].(map[int64]*rpc.Evaluator)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// BatchGetEvaluatorVersions indicates an expected call of BatchGetEvaluatorVersions.
func (mr *MockIEvaluatorRPCAdapterMockRecorder) BatchGetEvaluatorVersions(ctx, param any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetEvaluatorVersions", reflect.TypeOf((*MockIEvaluatorRPCAdapter)(nil).BatchGetEvaluatorVersions), ctx, param)
}
