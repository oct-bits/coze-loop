// Code generated by Validator v0.2.6. DO NOT EDIT.

package runtime

import (
	"bytes"
	"fmt"
	"reflect"
	"regexp"
	"strings"
	"time"
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = (*regexp.Regexp)(nil)
	_ = time.Nanosecond
)

func (p *ModelConfig) IsValid() error {
	if p.ResponseFormat != nil {
		if err := p.ResponseFormat.IsValid(); err != nil {
			return fmt.Errorf("field ResponseFormat not valid, %w", err)
		}
	}
	return nil
}
func (p *Message) IsValid() error {
	if p.ResponseMeta != nil {
		if err := p.ResponseMeta.IsValid(); err != nil {
			return fmt.Errorf("field ResponseMeta not valid, %w", err)
		}
	}
	return nil
}
func (p *ChatMessagePart) IsValid() error {
	if p.ImageURL != nil {
		if err := p.ImageURL.IsValid(); err != nil {
			return fmt.Errorf("field ImageURL not valid, %w", err)
		}
	}
	return nil
}
func (p *ChatMessageImageURL) IsValid() error {
	return nil
}
func (p *ToolCall) IsValid() error {
	if p.FunctionCall != nil {
		if err := p.FunctionCall.IsValid(); err != nil {
			return fmt.Errorf("field FunctionCall not valid, %w", err)
		}
	}
	return nil
}
func (p *FunctionCall) IsValid() error {
	return nil
}
func (p *ResponseMeta) IsValid() error {
	if p.Usage != nil {
		if err := p.Usage.IsValid(); err != nil {
			return fmt.Errorf("field Usage not valid, %w", err)
		}
	}
	return nil
}
func (p *TokenUsage) IsValid() error {
	return nil
}
func (p *Tool) IsValid() error {
	return nil
}
func (p *BizParam) IsValid() error {
	return nil
}
func (p *ResponseFormat) IsValid() error {
	return nil
}
