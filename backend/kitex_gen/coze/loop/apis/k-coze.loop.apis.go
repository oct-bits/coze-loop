// Code generated by Kitex v0.13.1. DO NOT EDIT.

package apis

import (
	"bytes"
	"fmt"
	"reflect"
	"strings"

	"github.com/cloudwego/gopkg/protocol/thrift"

	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/data/dataset"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/data/tag"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/eval_set"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/eval_target"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/evaluator"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/evaluation/expt"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/auth"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/authn"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/file"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/openapi"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/space"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/foundation/user"
	manage0 "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/llm/manage"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/llm/runtime"
	openapi1 "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/observability/openapi"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/observability/trace"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/debug"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/execute"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/manage"
	openapi0 "github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/prompt/openapi"
)

var (
	_ = dataset.KitexUnusedProtection
	_ = tag.KitexUnusedProtection
	_ = eval_set.KitexUnusedProtection
	_ = eval_target.KitexUnusedProtection
	_ = evaluator.KitexUnusedProtection
	_ = expt.KitexUnusedProtection
	_ = auth.KitexUnusedProtection
	_ = authn.KitexUnusedProtection
	_ = file.KitexUnusedProtection
	_ = openapi.KitexUnusedProtection
	_ = space.KitexUnusedProtection
	_ = user.KitexUnusedProtection
	_ = manage0.KitexUnusedProtection
	_ = runtime.KitexUnusedProtection
	_ = openapi1.KitexUnusedProtection
	_ = trace.KitexUnusedProtection
	_ = debug.KitexUnusedProtection
	_ = execute.KitexUnusedProtection
	_ = manage.KitexUnusedProtection
	_ = openapi0.KitexUnusedProtection
)

// unused protection
var (
	_ = fmt.Formatter(nil)
	_ = (*bytes.Buffer)(nil)
	_ = (*strings.Builder)(nil)
	_ = reflect.Type(nil)
	_ = thrift.STOP
)
