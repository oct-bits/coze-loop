// Copyright (c) 2025 coze-dev Authors
// SPDX-License-Identifier: Apache-2.0

// Code generated by hertz generator.

package apis

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/coze-dev/coze-loop/backend/kitex_gen/coze/loop/apis/observabilitytraceservice"
)

var observabilityClient observabilitytraceservice.Client

// ListSpans .
// @router /api/observability/v1/traces/spans [POST]
func ListSpans(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.ListSpans)
}

// GetTrace .
// @router /api/observability/v1/trace/:trace_id [GET]
func GetTrace(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.GetTrace)
}

// BatchGetTracesAdvanceInfo .
// @router /api/observability/v1/traces/batch_get_advance_info [POST]
func BatchGetTracesAdvanceInfo(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.BatchGetTracesAdvanceInfo)
}

// GetTracesMetaInfo .
// @router /api/observability/v1/traces/meta_info [GET]
func GetTracesMetaInfo(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.GetTracesMetaInfo)
}

// CreateView .
// @router /api/observability/v1/views/create_view [POST]
func CreateView(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.CreateView)
}

// UpdateView .
// @router /api/observability/v1/views/update_view [POST]
func UpdateView(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.UpdateView)
}

// DeleteView .
// @router /api/observability/v1/views/delete_view [POST]
func DeleteView(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.DeleteView)
}

// ListViews .
// @router /api/observability/v1/views/list_view [POST]
func ListViews(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.ListViews)
}

// CreateManualAnnotation .
// @router /api/observability/v1/annotations [POST]
func CreateManualAnnotation(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.CreateManualAnnotation)
}

// UpdateManualAnnotation .
// @router /api/observability/v1/annotations/:annotation_id [PUT]
func UpdateManualAnnotation(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.UpdateManualAnnotation)
}

// DeleteManualAnnotation .
// @router /api/observability/v1/annotations/:annotation_id [DELETE]
func DeleteManualAnnotation(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.DeleteManualAnnotation)
}

// ListAnnotations .
// @router /api/observability/v1/annotations/list [POST]
func ListAnnotations(ctx context.Context, c *app.RequestContext) {
	invokeAndRender(ctx, c, observabilityClient.ListAnnotations)
}
